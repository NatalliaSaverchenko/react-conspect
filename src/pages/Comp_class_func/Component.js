import './component.css'
const Component = () => {
  return (
    <>
      <h1 className="title">Функциональные и классовые компоненты</h1>
      <p className="text">
        ДЛЯ ЧЕГО: Компоненты позволяют разбить интерфейс на независимые части,
        про которые легко думать в отдельности. Их можно складывать вместе и
        использовать несколько раз.
      </p>
      <h2 className="title">
        React позволяет определять компоненты как классы или функции.
      </h2>
      <p className="text">
        КЛАССОВЫЙ КОМПОНЕНТ: Чтобы определить классовый компонент, необходимо
        отнаследоваться от React.Component. Единственный обязательный метод в
        подклассе React.Component — render().
      </p>
      <p className="text">
        ФУНКЦИОНАЛЬНЫЙ КОМПОНЕНТ: Проще всего объявить React-компонент как
        функцию. Эта функция — компонент, потому что она получает данные в одном
        объекте («пропсы») в качестве параметра и возвращает React-элемент.
        Tакие компоненты называются «функциональными», так как они буквально
        являются функциями.
      </p>
      <p className="text">
        ПЕРЕИСПОЛЬЗОВАНИЕ: Компоненты могут ссылаться на другие компоненты в
        возвращённом ими дереве. Это позволяет нам использовать одну и ту же
        абстракцию — компоненты — на любом уровне нашего приложения.
      </p>
      <h2 className="title">
        React-компоненты обязаны вести себя как чистые функции по отношению к
        своим пропсам.
      </h2>
    </>
  )
}
export default Component
